package main

import "fmt"

type Person struct {
	firstName string
	lastName  string
	age       int
	address   Address
	PhoneHomeCell
}

type PhoneHomeCell struct {
	home string
	cell string
}

func main() {

	p1 := Person{
		firstName: "Buster",
		lastName:  "Douglas",
		age:       30,
		address: Address{
			city: "London",
			country: "England",
		},
		PhoneHomeCell: PhoneHomeCell{
			home: "98765432",
			cell: "91234567",
		},
	}

	p2 := Person{
		firstName: "Dexter",
		age:       25,
	}

	p3 := Person{
		firstName: "Bobo",
		age: 25,
	}

	p2.address.city = "New York"
	p2.address.country = "USA"

	fmt.Println(p1.firstName)
	fmt.Println(p2.firstName)
	fmt.Println(p1.fullName())
	fmt.Println(p1.address.country)
	fmt.Println(p2.address.country)
	fmt.Println((p1.cell))
	fmt.Println(p1.address.city)
	fmt.Println("Are p1 and p2 equal?", p3 == p2)

	// Anonymous Structs
	user := struct {
		userName     string
		emailAddress string
	}{
		userName:     "user123",
		emailAddress: "fakeemail@example.com",
	}
	fmt.Println(user.userName)
	fmt.Println("Before Increment:", p1.age)
	p1.incrementAgeByOne()
	fmt.Println("After Increment", p1.age)
}

// Value receiver
func (p Person) fullName() string {
	return p.firstName + " " + p.lastName
}

// Pointer receiver
func (p *Person) incrementAgeByOne() {
	p.age++
}

type Address struct {
	city    string
	country string
}
